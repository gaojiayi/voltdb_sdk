package com.gaojy.cache.voltdb.core.dbsource.opt;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import java.util.Map;

/**
 * @Title:执行SQL的统一接口
 * @Description: 
 * @Author: gaojy
 * @Version: 1.0
 */
public interface IVoltdbDao
{
	/**
	 * 执行查询
	 * @param sql
	 * @return ResultSet
	 * @throws SQLException
	 */
	ResultSet executeQuery(String sql) throws SQLException;

	/**
	 * 执行查询
	 * @param sql SRC SQL
	 * @param parameters arrays
	 * @return ResultSet
	 * @throws SQLException
	 */
	ResultSet executeQuery(String sql, Object... parameters) throws SQLException;
	
	/**
	 * 执行查询，专给appframe用
	 * @param sql SRC SQL
	 * @param obj parameters arrays
	 * @return ResultSet
	 * @throws SQLException
	 */
	ResultSet executeQuery(String sql, Map<String, Object> obj) throws SQLException;

	/**
	 * 执行查询<br>
	 * class 对象需要加 @AIEntity 注解，属性增加@AIColumn(name="name")注解
	 * @param sql
	 * @param clazz bean 
	 * @return bean list
	 * @throws SQLException
	 */
	List<?> executeQuery(String sql, Class<?> clazz) throws SQLException;

	/**
	 * 执行insert/update/del 操作
	 * @param sql
	 * @return 影响行数
	 * @throws SQLException
	 */
	int executeUpdate(String sql) throws SQLException;
	
	/**
	 * 执行insert/update/del 操作，专给appframe用
	 * @param sql 
	 * @param obj 参数
	 * @return 影响行数
	 * @throws SQLException
	 */
	int executeUpdate(String sql,Map<String, Object> obj) throws SQLException;

	/**
	 * 执行insert/update/del 操作
	 * @param sql src sql
	 * @param autoGeneratedKeys
	 * @return 影响行数
	 * @throws SQLException
	 */
	int executeUpdate(String sql, int autoGeneratedKeys) throws SQLException;

	/**
	 * 执行insert/update/del 操作
	 * @param sql src sql
	 * @param columnIndexes
	 * @return 影响行数
	 * @throws SQLException
	 */
	int executeUpdate(String sql, int[] columnIndexes) throws SQLException;

	/**
	 * 执行insert/update/del 操作
	 * @param sql src sql
	 * @param columnNames
	 * @return 影响行数
	 * @throws SQLException
	 */
	int executeUpdate(String sql, String[] columnNames) throws SQLException;

	/**
	 * 执行insert/update/del 操作
	 * @param sql src sql
	 * @param parameters
	 * @return 影响行数
	 * @throws SQLException
	 */
	int executeUpdate(String sql, Object... parameters) throws SQLException;
	
	/**
	 * 得到APPFrame中的某个bean（该方法只适用于AppFrame）
	 * @param clazz
	 * @param sql
	 * @param parameters
	 * @return
	 * @throws Exception
	 */
	public <T> T getAPPBean(Class<T> clazz, String sql,Object... parameters) throws Exception;
	
	/**
	 * 得到APPFrame中的bean集合（该方法只适用于AppFrame）
	 * @param clazz
	 * @param sql
	 * @param parameters
	 * @return
	 * @throws Exception
	 */
	public <T> List<T> getAPPBeans(Class<T> clazz, String sql,Object... parameters) throws Exception;
}
